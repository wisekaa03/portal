type User {
  id: ID!
  createdAt: Date!
  updatedAt: Date!
  loginDomain: String
  username: String!
  disabled: Boolean!
  isAdmin: Boolean!
  settings: UserSettings!
  groups: [Group!]
  profile: Profile!
}

type UserSettingsTaskFavorite {
  where: String!
  code: String!
  svcCode: String!
}
type UserSettingsTask {
  status: String
  favorites: [UserSettingsTaskFavorite!]
}

input UserSettingsTaskFavoriteInput {
  where: String!
  code: String!
  svcCode: String!
}
input UserSettingsTaskInput {
  status: String
  favorites: [UserSettingsTaskFavoriteInput!]
}

type UserSettingsPhonebook {
  columns: [String]
}

input UserSettingsPhonebookInput {
  columns: [String]
}

type UserSettings {
  lng: String
  fontSize: Int
  drawer: Boolean
  phonebook: UserSettingsPhonebook
  task: UserSettingsTask
}

input UserSettingsInput {
  lng: String
  fontSize: Int
  drawer: Boolean
  phonebook: UserSettingsPhonebookInput
  task: UserSettingsTaskInput
}

enum Contact {
  PROFILE
  USER
}

input ProfileInput {
  contact: Contact!

  username: String

  firstName: String
  lastName: String
  middleName: String
  birthday: String
  gender: Int

  company: String
  title: String

  management: String
  department: String
  division: String

  telephone: String
  workPhone: String
  fax: String
  mobile: String
  email: String

  employeeID: String

  companyEng: String
  nameEng: String
  managementEng: String
  departmentEng: String
  divisionEng: String
  positionEng: String

  accessCard: String

  country: String
  postalCode: String
  region: String
  town: String
  street: String
  room: String

  notShowing: Boolean
  disabled: Boolean
}

type Mutation {
  syncLdap: Boolean
  ldapNewUser(ldap: ProfileInput!, photo: Upload, domain: String!): Profile
  ldapCheckUsername(value: String!, domain: String!): Boolean
  userSettings(value: UserSettingsInput): User
}
