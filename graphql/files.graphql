enum Folder {
  FOLDER
  FILE
}

type FilesFolder {
  id: String
  fileId: String
  creationDate: Date
  lastModified: Date
  type: Folder
  mount: String
  size: Int
  name: String
  mime: String
  permissions: String
  etag: String
  favorite: Int
  hasPreview: Boolean
  commentsUnread: Int
  commentsCount: Int
  ownerId: String
  ownerDisplayName: String
  resourceType: [String]
  shareTypes: [String]
  sharePermissions: String
}

type FilesFile {
  path: String
}

input FilesOptions {
  sync: Boolean
}

type Query {
  folderFiles(path: String): [FilesFolder]
}

type Mutation {
  putFile(path: String!, file: Upload!): Boolean!
  getFile(path: String!, options: FilesOptions): FilesFile!
}

type Subscription {
  folderFilesSubscription(path: String): [FilesFolder]
}
