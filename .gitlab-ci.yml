stages:
  - build
  - docker
  - deploy

variables:
  DOCKER_DRIVER: overlay2

prepare:
  image: node:15
  stage: build
  cache:
    key: "${CI_COMMIT_REF_SLUG}-build"
    paths:
      - node_modules/
  before_script:
    - env
    - echo -n "node version " && node -v
  script:
    - yarn install --production=true

build_development:
  image: node:15
  stage: build
  environment:
    name: development
  cache:
    key: "${CI_COMMIT_REF_SLUG}-development"
    paths:
      - node_modules/
      - apps/portal/.next/cache/
  before_script:
    - env
    - echo -n "node version " && node -v
  script:
    - yarn install --production=false
    - cd apps/portal && npx next telemetry status && npx next telemetry disable && cd ../..
    - ./entrypoint.sh build
    - ./entrypoint.sh test -u || true
    - time yarn build
    - time yarn build:sync
    - time yarn build:syncJob
  artifacts:
    paths:
      - .next/
      - dist

build_production:
  image: node:15
  stage: build
  environment:
    name: production
  cache:
    key: "${CI_COMMIT_REF_SLUG}-production"
    paths:
      - node_modules/
      - apps/portal/.next/cache/
  before_script:
    - env
    - echo -n "node version " && node -v
  script:
    - yarn install --production=false
    - cd apps/portal && npx next telemetry status && npx next telemetry disable && cd ../..
    - ./entrypoint.sh build
    - ./entrypoint.sh test -u || true
    - time yarn build
    - time yarn build:sync
    - time yarn build:syncJob
  artifacts:
    paths:
      - .next/
      - dist

docker:
  image: docker:latest
  stage: docker
  cache:
    key: "${CI_COMMIT_REF_SLUG}-build"
    paths:
      - node_modules/
    policy: pull
  before_script:
    - env
    - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" $CI_REGISTRY
  script:
    - |
      \
      if [ ! -d "node_modules" ]; then echo '!! CACHE NOT EXIST !!'; exit SIGINT; fi
    - docker build --cache-from $CI_REGISTRY_IMAGE:latest --build-arg BUILD_INLINE_CACHE=1 --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA --tag $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA

helm_development:
  image: dtzar/helm-kubectl:latest
  stage: deploy
  environment:
    name: development
  dependencies: []
  allow_failure: false
  before_script:
    - env
    - echo "Kubectl version" && kubectl version
    - echo "Helm version" && helm version
  script:
    # Portal
    - |
      helm upgrade ${CI_PROJECT_NAME} helm/portal \
        --set replicaCount="1" \
        --set PORT="${PORT:=4000}" \
        --set PORT_DEBUG="${PORT_DEBUG:=9229}" \
        --set DOMAIN="${DOMAIN}" \
        --set DEVELOPMENT="true" \
        --set LOG_LEVEL="${LOG_LEVEL}" \
        --set LOG_SERVER="${LOG_SERVER}" \
        --set DATABASE_URI="${DATABASE_URI}" \
        --set DATABASE_URI_RD="${DATABASE_URI_RD}" \
        --set DATABASE_SCHEMA="${DATABASE_SCHEMA}" \
        --set DATABASE_SYNCHRONIZE="${DATABASE_SYNCHRONIZE}" \
        --set DATABASE_DROP_SCHEMA="${DATABASE_DROP_SCHEMA}" \
        --set DATABASE_MIGRATIONS_RUN="${DATABASE_MIGRATIONS_RUN}" \
        --set DATABASE_LOGGING="${DATABASE_LOGGING}" \
        --set DATABASE_REDIS_URI="${DATABASE_REDIS_URI}" \
        --set DATABASE_REDIS_TTL="${DATABASE_REDIS_TTL}" \
        --set HTTP_REDIS_URI="${HTTP_REDIS_URI}" \
        --set HTTP_REDIS_TTL="${HTTP_REDIS_TTL}" \
        --set HTTP_REDIS_MAX_OBJECTS="${HTTP_REDIS_MAX_OBJECTS}" \
        --set SESSION_NAME="${SESSION_NAME}" \
        --set SESSION_REDIS_URI="${SESSION_REDIS_URI}" \
        --set SESSION_COOKIE_TTL="${SESSION_COOKIE_TTL}" \
        --set SESSION_SECRET="${SESSION_SECRET}" \
        --set LDAP="${LDAP}" \
        --set LDAP_REDIS_URI="${LDAP_REDIS_URI}" \
        --set LDAP_REDIS_TTL="${LDAP_REDIS_TTL}" \
        --set MICROSERVICE_URL="${MICROSERVICE_URL}" \
        --set TICKETS_URL="${TICKETS_URL}" \
        --set REPORTS_URL="${REPORTS_URL}" \
        --set DOCFLOW_URL="${DOCFLOW_URL}" \
        --set TICKETS_REDIS_URI="${TICKETS_REDIS_URI}" \
        --set TICKETS_REDIS_TTL="${TICKETS_REDIS_TTL}" \
        --set REPORTS_REDIS_URI="${REPORTS_REDIS_URI}" \
        --set REPORTS_REDIS_TTL="${REPORTS_REDIS_TTL}" \
        --set DOCFLOW_REDIS_URI="${DOCFLOW_REDIS_URI}" \
        --set DOCFLOW_REDIS_TTL="${DOCFLOW_REDIS_TTL}" \
        --set OSTICKET_URL="${OSTICKET_URL}" \
        --set NEXTCLOUD_URL="${NEXTCLOUD_URL}" \
        --set NEXTCLOUD_REDIS_URI="${NEXTCLOUD_REDIS_URI}" \
        --set NEXTCLOUD_REDIS_TTL="${NEXTCLOUD_REDIS_TTL}" \
        --set MAX_FILE_SIZE="${MAX_FILE_SIZE}" \
        --set NEWS_URL="${NEWS_URL}" \
        --set NEWS_API_URL="${NEWS_API_URL}" \
        --set MAIL_URL="${MAIL_URL}" \
        --set MAIL_LOGIN_URL="${MAIL_LOGIN_URL}" \
        --set MEETING_URL="${MEETING_URL}" \
        --set service.type="ClusterIP" \
        --set imageCredentials.registry="${CI_REGISTRY}" \
        --set imageCredentials.username="${CI_DEPLOY_USER:-CI_REGISTRY_USER}" \
        --set imageCredentials.password="${CI_DEPLOY_PASSWORD:-CI_REGISTRY_PASSWORD}" \
        --set image.repository="${CI_REGISTRY_IMAGE}" \
        --set image.tag="${CI_COMMIT_SHA}" \
        --set ingress.annotations."cert-manager\.io/cluster-issuer"="letsencrypt-prod" \
        --set ingress.hosts[0].host="${INGRESS_HOST}" \
        --set ingress.tls[0].hosts[0]="${INGRESS_HOST}" \
        --install --namespace=${KUBE_NAMESPACE} \
        --debug --values helm/portal/values.yaml
    # Portal tasks
    - |
      helm upgrade ${CI_PROJECT_NAME}-tasks helm/tasks \
        --set replicaCount="1" \
        --set PORT="${PORT:=4000}" \
        --set PORT_DEBUG="${PORT_DEBUG:=9229}" \
        --set DOMAIN="${DOMAIN}" \
        --set DEVELOPMENT="true" \
        --set LOG_LEVEL="${LOG_LEVEL}" \
        --set LOG_SERVER="${LOG_SERVER}" \
        --set DATABASE_URI="${DATABASE_URI}" \
        --set DATABASE_URI_RD="${DATABASE_URI_RD}" \
        --set DATABASE_SCHEMA="${DATABASE_SCHEMA}" \
        --set DATABASE_SYNCHRONIZE="${DATABASE_SYNCHRONIZE}" \
        --set DATABASE_DROP_SCHEMA="${DATABASE_DROP_SCHEMA}" \
        --set DATABASE_MIGRATIONS_RUN="${DATABASE_MIGRATIONS_RUN}" \
        --set DATABASE_LOGGING="${DATABASE_LOGGING}" \
        --set DATABASE_REDIS_URI="${DATABASE_REDIS_URI}" \
        --set DATABASE_REDIS_TTL="${DATABASE_REDIS_TTL}" \
        --set HTTP_REDIS_URI="${HTTP_REDIS_URI}" \
        --set HTTP_REDIS_TTL="${HTTP_REDIS_TTL}" \
        --set HTTP_REDIS_MAX_OBJECTS="${HTTP_REDIS_MAX_OBJECTS}" \
        --set SESSION_NAME="${SESSION_NAME}" \
        --set SESSION_REDIS_URI="${SESSION_REDIS_URI}" \
        --set SESSION_COOKIE_TTL="${SESSION_COOKIE_TTL}" \
        --set SESSION_SECRET="${SESSION_SECRET}" \
        --set LDAP="${LDAP}" \
        --set LDAP_REDIS_URI="${LDAP_REDIS_URI}" \
        --set LDAP_REDIS_TTL="${LDAP_REDIS_TTL}" \
        --set MICROSERVICE_URL="${MICROSERVICE_URL}" \
        --set TICKETS_URL="${TICKETS_URL}" \
        --set REPORTS_URL="${REPORTS_URL}" \
        --set DOCFLOW_URL="${DOCFLOW_URL}" \
        --set TICKETS_REDIS_URI="${TICKETS_REDIS_URI}" \
        --set TICKETS_REDIS_TTL="${TICKETS_REDIS_TTL}" \
        --set REPORTS_REDIS_URI="${REPORTS_REDIS_URI}" \
        --set REPORTS_REDIS_TTL="${REPORTS_REDIS_TTL}" \
        --set DOCFLOW_REDIS_URI="${DOCFLOW_REDIS_URI}" \
        --set DOCFLOW_REDIS_TTL="${DOCFLOW_REDIS_TTL}" \
        --set OSTICKET_URL="${OSTICKET_URL}" \
        --set NEXTCLOUD_URL="${NEXTCLOUD_URL}" \
        --set NEXTCLOUD_REDIS_URI="${NEXTCLOUD_REDIS_URI}" \
        --set NEXTCLOUD_REDIS_TTL="${NEXTCLOUD_REDIS_TTL}" \
        --set MAX_FILE_SIZE="${MAX_FILE_SIZE}" \
        --set NEWS_URL="${NEWS_URL}" \
        --set NEWS_API_URL="${NEWS_API_URL}" \
        --set MAIL_URL="${MAIL_URL}" \
        --set MAIL_LOGIN_URL="${MAIL_LOGIN_URL}" \
        --set MEETING_URL="${MEETING_URL}" \
        --set service.type="ClusterIP" \
        --set imageCredentials.registry="${CI_REGISTRY}" \
        --set imageCredentials.username="${CI_DEPLOY_USER:-CI_REGISTRY_USER}" \
        --set imageCredentials.password="${CI_DEPLOY_PASSWORD:-CI_REGISTRY_PASSWORD}" \
        --set image.repository="${CI_REGISTRY_IMAGE}" \
        --set image.tag="${CI_COMMIT_SHA}" \
        --set ingress.annotations."cert-manager\.io/cluster-issuer"="letsencrypt-prod" \
        --set ingress.hosts[0].host="${INGRESS_HOST}" \
        --set ingress.tls[0].hosts[0]="${INGRESS_HOST}" \
        --install --namespace=${KUBE_NAMESPACE} \
        --debug --values helm/tasks/values.yaml
    # Portal-sync
    - |
      helm upgrade ${CI_PROJECT_NAME}-sync helm/portal-sync \
        --install --namespace=${KUBE_NAMESPACE} \
        --debug --values helm/portal-sync/values.yaml \
        --set replicaCount="1" \
        --set PORT="${PORT_MICROSERVICE}" \
        --set DEVELOPMENT="true" \
        --set service.type="ClusterIP" \
        --set imageCredentials.registry="${CI_REGISTRY}" \
        --set imageCredentials.username="${CI_DEPLOY_USER:-CI_REGISTRY_USER}" \
        --set imageCredentials.password="${CI_DEPLOY_PASSWORD:-CI_REGISTRY_PASSWORD}" \
        --set image.repository="${CI_REGISTRY_IMAGE}" \
        --set image.tag="${CI_COMMIT_SHA}"

helm_production:
  image: dtzar/helm-kubectl:latest
  stage: deploy
  environment:
    name: production
  dependencies: []
  when: manual
  allow_failure: false
  before_script:
    - env
    - echo "Kubectl version" && kubectl version
    - echo "Helm version" && helm version
  script:
    # Portal
    - |
      helm upgrade ${CI_PROJECT_NAME} helm/portal \
        --set PORT="${PORT:=4000}" \
        --set DOMAIN="${DOMAIN}" \
        --set DEVELOPMENT="false" \
        --set LOG_LEVEL="${LOG_LEVEL}" \
        --set LOG_SERVER="${LOG_SERVER}" \
        --set DATABASE_URI="${DATABASE_URI}" \
        --set DATABASE_URI_RD="${DATABASE_URI_RD}" \
        --set DATABASE_SCHEMA="${DATABASE_SCHEMA}" \
        --set DATABASE_SYNCHRONIZE="${DATABASE_SYNCHRONIZE}" \
        --set DATABASE_DROP_SCHEMA="${DATABASE_DROP_SCHEMA}" \
        --set DATABASE_MIGRATIONS_RUN="${DATABASE_MIGRATIONS_RUN}" \
        --set DATABASE_LOGGING="${DATABASE_LOGGING}" \
        --set DATABASE_REDIS_URI="${DATABASE_REDIS_URI}" \
        --set DATABASE_REDIS_TTL="${DATABASE_REDIS_TTL}" \
        --set HTTP_REDIS_URI="${HTTP_REDIS_URI}" \
        --set HTTP_REDIS_TTL="${HTTP_REDIS_TTL}" \
        --set HTTP_REDIS_MAX_OBJECTS="${HTTP_REDIS_MAX_OBJECTS}" \
        --set SESSION_NAME="${SESSION_NAME}" \
        --set SESSION_REDIS_URI="${SESSION_REDIS_URI}" \
        --set SESSION_COOKIE_TTL="${SESSION_COOKIE_TTL}" \
        --set SESSION_SECRET="${SESSION_SECRET}" \
        --set LDAP="${LDAP}" \
        --set LDAP_REDIS_URI="${LDAP_REDIS_URI}" \
        --set LDAP_REDIS_TTL="${LDAP_REDIS_TTL}" \
        --set MICROSERVICE_URL="${MICROSERVICE_URL}" \
        --set TICKETS_URL="${TICKETS_URL}" \
        --set REPORTS_URL="${REPORTS_URL}" \
        --set DOCFLOW_URL="${DOCFLOW_URL}" \
        --set TICKETS_REDIS_URI="${TICKETS_REDIS_URI}" \
        --set TICKETS_REDIS_TTL="${TICKETS_REDIS_TTL}" \
        --set REPORTS_REDIS_URI="${REPORTS_REDIS_URI}" \
        --set REPORTS_REDIS_TTL="${REPORTS_REDIS_TTL}" \
        --set DOCFLOW_REDIS_URI="${DOCFLOW_REDIS_URI}" \
        --set DOCFLOW_REDIS_TTL="${DOCFLOW_REDIS_TTL}" \
        --set OSTICKET_URL="${OSTICKET_URL}" \
        --set NEXTCLOUD_URL="${NEXTCLOUD_URL}" \
        --set NEXTCLOUD_REDIS_URI="${NEXTCLOUD_REDIS_URI}" \
        --set NEXTCLOUD_REDIS_TTL="${NEXTCLOUD_REDIS_TTL}" \
        --set MAX_FILE_SIZE="${MAX_FILE_SIZE}" \
        --set NEWS_URL="${NEWS_URL}" \
        --set NEWS_API_URL="${NEWS_API_URL}" \
        --set MAIL_URL="${MAIL_URL}" \
        --set MAIL_LOGIN_URL="${MAIL_LOGIN_URL}" \
        --set MEETING_URL="${MEETING_URL}" \
        --set service.type="ClusterIP" \
        --set imageCredentials.registry="${CI_REGISTRY}" \
        --set imageCredentials.username="${CI_DEPLOY_USER:-CI_REGISTRY_USER}" \
        --set imageCredentials.password="${CI_DEPLOY_PASSWORD:-CI_REGISTRY_PASSWORD}" \
        --set image.repository="${CI_REGISTRY_IMAGE}" \
        --set image.tag="${CI_COMMIT_SHA}" \
        --set ingress.annotations."cert-manager\.io/cluster-issuer"="letsencrypt-prod" \
        --set ingress.hosts[0].host="${INGRESS_HOST}" \
        --set ingress.tls[0].hosts[0]="${INGRESS_HOST}" \
        --install --namespace=${KUBE_NAMESPACE} \
        --debug --values helm/portal/values.yaml
    # Portal tasks
    - |
      helm upgrade ${CI_PROJECT_NAME}-tasks helm/tasks \
        --set replicaCount="1" \
        --set PORT="${PORT:=4000}" \
        --set DOMAIN="${DOMAIN}" \
        --set DEVELOPMENT="false" \
        --set LOG_LEVEL="${LOG_LEVEL}" \
        --set LOG_SERVER="${LOG_SERVER}" \
        --set DATABASE_URI="${DATABASE_URI}" \
        --set DATABASE_URI_RD="${DATABASE_URI_RD}" \
        --set DATABASE_SCHEMA="${DATABASE_SCHEMA}" \
        --set DATABASE_SYNCHRONIZE="${DATABASE_SYNCHRONIZE}" \
        --set DATABASE_DROP_SCHEMA="${DATABASE_DROP_SCHEMA}" \
        --set DATABASE_MIGRATIONS_RUN="${DATABASE_MIGRATIONS_RUN}" \
        --set DATABASE_LOGGING="${DATABASE_LOGGING}" \
        --set DATABASE_REDIS_URI="${DATABASE_REDIS_URI}" \
        --set DATABASE_REDIS_TTL="${DATABASE_REDIS_TTL}" \
        --set HTTP_REDIS_URI="${HTTP_REDIS_URI}" \
        --set HTTP_REDIS_TTL="${HTTP_REDIS_TTL}" \
        --set HTTP_REDIS_MAX_OBJECTS="${HTTP_REDIS_MAX_OBJECTS}" \
        --set SESSION_NAME="${SESSION_NAME}" \
        --set SESSION_REDIS_URI="${SESSION_REDIS_URI}" \
        --set SESSION_COOKIE_TTL="${SESSION_COOKIE_TTL}" \
        --set SESSION_SECRET="${SESSION_SECRET}" \
        --set LDAP="${LDAP}" \
        --set LDAP_REDIS_URI="${LDAP_REDIS_URI}" \
        --set LDAP_REDIS_TTL="${LDAP_REDIS_TTL}" \
        --set MICROSERVICE_URL="${MICROSERVICE_URL}" \
        --set TICKETS_URL="${TICKETS_URL}" \
        --set REPORTS_URL="${REPORTS_URL}" \
        --set DOCFLOW_URL="${DOCFLOW_URL}" \
        --set TICKETS_REDIS_URI="${TICKETS_REDIS_URI}" \
        --set TICKETS_REDIS_TTL="${TICKETS_REDIS_TTL}" \
        --set REPORTS_REDIS_URI="${REPORTS_REDIS_URI}" \
        --set REPORTS_REDIS_TTL="${REPORTS_REDIS_TTL}" \
        --set DOCFLOW_REDIS_URI="${DOCFLOW_REDIS_URI}" \
        --set DOCFLOW_REDIS_TTL="${DOCFLOW_REDIS_TTL}" \
        --set OSTICKET_URL="${OSTICKET_URL}" \
        --set NEXTCLOUD_URL="${NEXTCLOUD_URL}" \
        --set NEXTCLOUD_REDIS_URI="${NEXTCLOUD_REDIS_URI}" \
        --set NEXTCLOUD_REDIS_TTL="${NEXTCLOUD_REDIS_TTL}" \
        --set MAX_FILE_SIZE="${MAX_FILE_SIZE}" \
        --set NEWS_URL="${NEWS_URL}" \
        --set NEWS_API_URL="${NEWS_API_URL}" \
        --set MAIL_URL="${MAIL_URL}" \
        --set MAIL_LOGIN_URL="${MAIL_LOGIN_URL}" \
        --set MEETING_URL="${MEETING_URL}" \
        --set service.type="ClusterIP" \
        --set imageCredentials.registry="${CI_REGISTRY}" \
        --set imageCredentials.username="${CI_DEPLOY_USER:-CI_REGISTRY_USER}" \
        --set imageCredentials.password="${CI_DEPLOY_PASSWORD:-CI_REGISTRY_PASSWORD}" \
        --set image.repository="${CI_REGISTRY_IMAGE}" \
        --set image.tag="${CI_COMMIT_SHA}" \
        --install --namespace=${KUBE_NAMESPACE} \
        --debug --values helm/tasks/values.yaml
    # Portal-sync
    - |
      helm upgrade ${CI_PROJECT_NAME}-sync helm/portal-sync \
        --install --namespace=${KUBE_NAMESPACE} \
        --debug --values helm/portal-sync/values.yaml \
        --set PORT="${PORT_MICROSERVICE}" \
        --set DEVELOPMENT="false" \
        --set service.type="ClusterIP" \
        --set imageCredentials.registry="${CI_REGISTRY}" \
        --set imageCredentials.username="${CI_DEPLOY_USER:-CI_REGISTRY_USER}" \
        --set imageCredentials.password="${CI_DEPLOY_PASSWORD:-CI_REGISTRY_PASSWORD}" \
        --set image.repository="${CI_REGISTRY_IMAGE}" \
        --set image.tag="${CI_COMMIT_SHA}"
